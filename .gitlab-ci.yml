stages:
  - lint
  - dbuild_validate
  - dbuild_push
  - docker_pushrm
  - tag
  - changelog

before_script:
  - echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin

.build_template:
  interruptible: true
  retry: 1
  tags:
    - docker

shellcheck:
  stage: lint
  extends: .build_template
  script:
    - shellcheck -e SC1090,SC1091,SC1117 files/*.sh
  only:
    changes:
      - files/self-service-password.sh
      - files/service-desk.sh
      - files/white-pages.sh

check_orphan_variables:
  stage: lint
  extends: .build_template
  script:
    - grep -n -E [^\\]\\$ files/self-service-password.sh | grep -v $\{ | grep -v $\( && exit 1 || echo OK
    - grep -n -E [^\\]\\$ files/service-desk.sh | grep -v $\{ | grep -v $\( && exit 1 || echo OK
    - grep -n -E [^\\]\\$ files/white-pages.sh | grep -v $\{ | grep -v $\( && exit 1 || echo OK
  only:
    changes:
      - files/self-service-password.sh
      - files/service-desk.sh
      - files/white-pages.sh

hadolint:
  stage: lint
  extends: .build_template
  script:
    - hadolint --config .hadolint.yml Dockerfile
  only:
    changes:
      - Dockerfile

wp-validate:
  stage: dbuild_validate
  extends: .build_template
  script:
    - docker buildx build --no-cache --build-arg LTB_PROJECT=white-pages -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:white-pages --platform=linux/arm,linux/arm64,linux/amd64 .
  only:
    refs:
    - master
    - merge_requests
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/white-pages.sh

sd-validate:
  stage: dbuild_validate
  extends: .build_template
  script:
    - docker buildx build --no-cache --build-arg LTB_PROJECT=service-desk -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:service-desk --platform=linux/arm,linux/arm64,linux/amd64 .
  only:
    refs:
    - master
    - merge_requests
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/service-desk.sh

ssp-validate:
  stage: dbuild_validate
  extends: .build_template
  script:
    - docker buildx build --no-cache --build-arg LTB_PROJECT=self-service-password -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:self-service-password --platform=linux/arm,linux/arm64,linux/amd64 .
  only:
    refs:
    - master
    - merge_requests
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/self-service-password.sh

white-pages:
  stage: dbuild_push
  extends: .build_template
  script:
    - docker buildx build --build-arg LTB_PROJECT=white-pages -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:white-pages-${CI_COMMIT_SHORT_SHA} -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:white-pages --platform=linux/arm,linux/arm64,linux/amd64 . --push
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/white-pages.sh

service-desk:
  stage: dbuild_push
  extends: .build_template
  script:
    - docker buildx build --build-arg LTB_PROJECT=service-desk -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:service-desk-${CI_COMMIT_SHORT_SHA} -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:service-desk --platform=linux/arm,linux/arm64,linux/amd64 . --push
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/service-desk.sh

self-service-password:
  stage: dbuild_push
  extends: .build_template
  script:
    - docker buildx build --build-arg LTB_PROJECT=self-service-password -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:self-service-password-${CI_COMMIT_SHORT_SHA} -t ${DOCKERHUB_USER}/${CI_PROJECT_NAME}:self-service-password --platform=linux/arm,linux/arm64,linux/amd64 . --push
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - files/apache2.conf
      - files/security.conf
      - files/entrypoint.sh
      - files/self-service-password.sh

docker_pushrm:
  stage: docker_pushrm
  extends: .build_template
  script:
    - docker pushrm ${DOCKERHUB_USER}/${CI_PROJECT_NAME}
  only:
    refs:
      - master
    changes:
      - README.md

include:
  - project: 'sysadmins/templates-ci'
    ref: master
    file:
      - 'create_tag.yml'
      - 'create_changelog.yml'
    interruptible: true
    tags:
      - ansible-ci
    only:
      refs:
        - master
